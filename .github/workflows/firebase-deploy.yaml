name: Firebase Deploy

on:
  push:
    branches:
      - main  # Workflow hanya berjalan saat ada push ke branch 'main'

jobs:
  build:
    runs-on: ubuntu-latest  # Menentukan environment yang digunakan, dalam hal ini Ubuntu terbaru
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Checkout kode dari repository

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Menggunakan Node.js versi 18

      - name: Install dependencies
        run: |
          npm install

      - name: Build the project
        run: |
          npm run build

      - name: Install Firebase CLI
        run: |
          npm install -g firebase-tools

      # Set Firebase service account credentials from GitHub Secret
      - name: Set Firebase Service Account Credentials
        run: |
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" > $GITHUB_WORKSPACE/firebase-service-account.json

      # Debugging: Check if the service account file exists
      - name: Verify service account file
        run: |
          ls -la $GITHUB_WORKSPACE/firebase-service-account.json
          cat $GITHUB_WORKSPACE/firebase-service-account.json

      # Set GOOGLE_APPLICATION_CREDENTIALS to the service account file path
      - name: Set GOOGLE_APPLICATION_CREDENTIALS
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS="$GITHUB_WORKSPACE/firebase-service-account.json"
          echo "GOOGLE_APPLICATION_CREDENTIALS set to $GITHUB_WORKSPACE/firebase-service-account.json"

      # Deploy to Firebase Hosting
      - name: Deploy to Firebase Hosting
        run: |
          firebase deploy --only hosting --project dev --force

      # Set Firebase Configuration as Environment Variables
      - name: Set Firebase Configuration as Environment Variables
        run: |
          echo "FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> $GITHUB_ENV
          echo "FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
          echo "FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
          echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
          echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> $GITHUB_ENV

      # Run Firebase App (Example: Using Firebase SDK to initialize Firestore)
      - name: Run Firebase App
        run: |
          echo "Initializing Firebase App with secrets"
          node -e "const { initializeApp } = require('firebase/app'); const { getFirestore } = require('firebase/firestore'); const firebaseConfig = {
            apiKey: process.env.FIREBASE_API_KEY,
            authDomain: process.env.FIREBASE_AUTH_DOMAIN,
            projectId: process.env.FIREBASE_PROJECT_ID,
            storageBucket: process.env.FIREBASE_STORAGE_BUCKET,
            messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,
            appId: process.env.FIREBASE_APP_ID
          }; 
          const app = initializeApp(firebaseConfig); 
          const db = getFirestore(app); 
          console.log(db);"
